<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- singleton+setter模式下的循环依赖 没有问题 -->
    <!-- singleton 表示在整个spring容器中是单例的，独一无二的对象-->
    <!--
        在singleton+setter 模式下，为什么循环依赖不会出现问题？
            在这种模式下，spring对bean的管理，主要清晰的分为两个阶段：
                第一个阶段：在spring容器加载的时候，实例化bean，只要其中任意一个bean实例化之后，马上进行“曝光”【不等属性赋值就曝光】
                第二个阶段：bean曝光之后，再进行属性赋值（调用set方法）
             核心解决方案：实例化对象和对象的属性赋值分为两个阶段完成
    -->

    <bean id="husbandBean" class="com.wdd.spring6.bean.Husband" scope="singleton">
            <property name="name" value="张三"/>
            <property name="wife" ref="wifeBean"/>
    </bean>

    <bean id="wifeBean" class="com.wdd.spring6.bean.Wife" scope="singleton">
        <property name="name" value="小花"/>
        <property name="husband" ref="husbandBean"/>
    </bean>



    <!-- prototype+setter模式下的循环依赖 存在问题，会出现异常 -->
    <!-- BeanCurrentlyInCreationException 当前的Bean正在处于创建中异常 -->
    <!-- 注意：当两个bean的scope都是prototype的时候，才会出现异常，其中任意一个是singleton，就不会出现异常 -->
    <!--
    <bean id="husbandBean" class="com.wdd.spring6.bean.Husband" scope="prototype">
        <property name="name" value="张三"/>
        <property name="wife" ref="wifeBean"/>
    </bean>

    <bean id="wifeBean" class="com.wdd.spring6.bean.Wife" scope="prototype">
        <property name="name" value="小花"/>
        <property name="husband" ref="husbandBean"/>
    </bean>
    -->
</beans>